certManager:
  certificate:
    # -- Create a Certificate
    create: true

    # -- The name of the Certificate
    name: "{{ .Release.Name }}-webhook"

    # -- The name of the Certificate's secret
    secretName: "{{ .Release.Name }}-webhook"

  # -- Enable cert-manager support
  enabled: false

  issuer:
    # -- Create a self-signed certificate Issuer
    create: true

    # -- The name of the created certificate Issuer
    name: "{{ .Release.Name }}-issuer"

controller:
  # -- Annotations to apply to the controller
  annotations: {}

  # -- Create the controller that handles the webhook
  create: true

  # -- The name of the image to use
  image: cloudcustodian/c7n:latest

  # -- The name of the controller
  name: "{{ .Release.Name }}"

  # -- The action to take when the request results in an error
  onException: warn

  # -- The port the deployment should listen on
  port: 8443

  # -- The controller's replica count
  replicas: 1

pod:
  # -- Annotations to apply to the pod
  annotations: {}

  # -- Labels applied to the pods
  labels:
    app: c7n_kube

  # -- The name of controller's pods
  name: "{{ .Release.Name }}"

policies:
  configMap:
    # -- The name of the ConfigMap
    name: "{{ .Release.Name }}-policies"

    # -- The policies to insert into the ConfigMap
    policies: []

  # -- The source of policies. One of "configMap" or "volume"
  source: ""

  # -- The policy volume
  volume: {}

  # -- The policy volume mount
  volumeMount: {}

service:
  # -- True to create the service
  create: true

  # -- The name of the service
  name: "{{ .Release.Name }}"

  # -- The service's port
  port: 8443

webhook:
  # -- The static CA bundle. Necessary if not using cert-manager.
  caBundle: ""

  # -- True to create the webhook
  create: true

  # -- How the webhook should react to an unexpected error: Ignore or Fail
  failurePolicy: Ignore

  # -- The webhook's match policy
  matchPolicy: ""

  # -- The webhook's namespace selector
  namespaceSelector: {}

  # -- The webhook's object selector
  objectSelector: {}

  # -- The resources that the webhook should monitor
  rules: []
