{{- range $scheduledPolicy := .Values.scheduledPolicies }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "cloud-custodian-cron.fullname" $ }}-{{ $scheduledPolicy.name }}
  labels:
    {{- include "cloud-custodian-cron.labels" $ | nindent 4 }}
spec:
  concurrencyPolicy: {{ $scheduledPolicy.concurrencyPolicy }}
  schedule: {{ $scheduledPolicy.schedule | quote }}
  failedJobsHistoryLimit: {{ $scheduledPolicy.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ $scheduledPolicy.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backOffLimit:
      template:
        metadata:
          {{- with $.Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "cloud-custodian-cron.selectorLabels" $ | nindent 12 }}
        spec:
          volumes:
          {{- if $.Values.secret.enabled }}
          - name: {{ template "cloud-custodian-cron.fullname" $ }}-secret
            secret:
              secretName: {{ $.Values.secret.secretName }}
          {{- end }}
          - name: {{ include "cloud-custodian-cron.fullname" $ }}-data
          {{- if $.Values.persistence.enabled }}
            persistentVolumeClaim:
              claimName: {{ $.Values.persistence.existingClaim | default (printf "%s-%s" (include "cloud-custodian-cron.fullname" $ ) "data") }}
          {{- else }}
            emptyDir: {}
          {{- end }}
          - name: policy
            configMap:
              name: "{{ include "cloud-custodian-cron.fullname" $ }}-{{ $scheduledPolicy.name }}"
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "cloud-custodian-cron.serviceAccountName" $ }}
          securityContext:
            {{- toYaml $.Values.podSecurityContext | nindent 12 }}
          containers:
          - name: {{ $.Chart.Name }}
            securityContext:
              {{- toYaml $.Values.securityContext | nindent 14 }}
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            args:
            {{- range $.Values.args }}
            - {{ . | quote }}
            {{- end }}
            {{- with $.Values.envVars }}
            env:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            volumeMounts:
            - name: policy
              mountPath: /home/custodian/policies.yaml
              subPath: policies.yaml
            - name: {{ include "cloud-custodian-cron.fullname" $ }}-data
              mountPath: /home/custodian
            {{- if $.Values.secret.enabled }}
            - mountPath: {{ default "/home/custodian/.aws" $.Values.secret.mountPath }}
              name: {{ template "cloud-custodian-cron.fullname" $ }}-secret
              readOnly: {{ default "true" $.Values.secret.readOnly }}
            {{- end }}
            resources:
              {{- toYaml $.Values.resources | nindent 14 }}
          {{- with $.Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ $.Values.restartPolicy | quote }}
{{- end }}
